name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ '**' ]

jobs:
  # 1. Tests
  test:
    name: Ejecutar tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    env:
      ENVIRONMENT:             ${{ secrets.ENVIRONMENT }}
      SECRET_KEY:              ${{ secrets.SECRET_KEY }}
      ALGORITHM:               ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
      DATABASE_URL:            ${{ secrets.DATABASE_URL }}
      EMAIL_SENDER:            ${{ secrets.EMAIL_SENDER }}
      EMAIL_APP_PASSWORD:      ${{ secrets.EMAIL_APP_PASSWORD }}
      LOGS_TOKEN:              ${{ secrets.LOGS_TOKEN }}
      FACE_RECOGNITION_AI_MODEL: ${{ secrets.FACE_RECOGNITION_AI_MODEL }}
      DATA_FOLDER: ${{ secrets.DATA_FOLDER }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ejecutar tests con coverage
        run: |
          pip install coverage
          coverage run --omit="*/config.py,*/config-*.py" -m pytest --junitxml=test-results/junit.xml --verbose
          coverage xml -o coverage.xml

      - name: Guardar resultados de test
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results

      - name: Subir reporte de cobertura
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  # 2. Lint con flake8
  lint:
    name: Comprobar estilo con flake8
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Instalar flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Ejecutar flake8
        continue-on-error: true
        run: flake8 --ignore=E501 --exclude=.venv,.git,__pycache__,app/html .

  # 3. Seguridad: Bandit
  bandit:
    name: "Security scan: Bandit"
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Instalar bandit
        run: pip install bandit
      - name: Ejecutar bandit
        continue-on-error: true
        run: bandit -r ./app --exclude ./app/html || true

  # 4. Seguridad: Trivy
  trivy:
    name: "Security scan: Trivy FS"
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Instalar Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh \
            | sh -s -- -b /usr/local/bin
      - name: Ejecutar Trivy filesystem scan
        continue-on-error: true
        run: trivy fs --exit-code 0 .

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: .
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          args: >
            -Dsonar.branch.name=develop
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.junit.reportPaths=test-results/junit.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
